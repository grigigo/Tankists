#############################################################################
# Makefile for building: libUnitTest_armeabi-v7a.so
# Generated by qmake (3.1) (Qt 5.15.2)
# Project:  ..\UnitTest\UnitTest.pro
# Template: app
#############################################################################

MAKEFILE      = Makefile

EQ            = =

####### Compiler, tools and options

CC            = C:\Users\timka\AppData\Local\Android\Sdk\ndk\21.3.6528147/toolchains/llvm/prebuilt/windows-x86_64/bin/clang
CXX           = C:\Users\timka\AppData\Local\Android\Sdk\ndk\21.3.6528147/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++
DEFINES       = -DQT_QML_DEBUG
CFLAGS        = -target armv7a-linux-androideabi21 -fno-limit-debug-info -fPIC -fstack-protector-strong -DANDROID -g -marm -O0 -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -target armv7a-linux-androideabi21 -fno-limit-debug-info -fPIC -fstack-protector-strong -DANDROID -g -marm -O0 -std=gnu++11 -Wall -W -fPIC $(DEFINES)
INCPATH       = -I..\UnitTest -I. -I..\..\..\5.15.2\android\mkspecs\android-clang
QMAKE         = C:\Qt\5.15.2\android\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = copy /y
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = copy /y
INSTALL_PROGRAM = copy /y
INSTALL_DIR   = xcopy /s /q /y /i
QINSTALL      = C:\Qt\5.15.2\android\bin\qmake.exe -install qinstall
QINSTALL_PROGRAM = C:\Qt\5.15.2\android\bin\qmake.exe -install qinstall -exe
DEL_FILE      = del
SYMLINK       = $(QMAKE) -install ln -f -s
DEL_DIR       = rmdir
MOVE          = cmd /c move
TAR           = 
COMPRESS      = 
DISTNAME      = libUnitTest_armeabi-v7a.so1.0.0
DISTDIR = C:\Qt\Tankists\Tankists\build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug\armeabi-v7a\libUnitTest_armeabi-v7a.so1.0.0
LINK          = C:\Users\timka\AppData\Local\Android\Sdk\ndk\21.3.6528147/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++ -target armv7a-linux-androideabi21 -fno-limit-debug-info
LFLAGS        = -Wl,-soname,libUnitTest_armeabi-v7a.so -Wl,--build-id=sha1 -Wl,--no-undefined -Wl,-z,noexecstack -shared
LIBS          = $(SUBLIBS)    -llog -lz -lm -ldl -lc
AR            = C:\Users\timka\AppData\Local\Android\Sdk\ndk\21.3.6528147/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar cqs
RANLIB        = C:\Users\timka\AppData\Local\Android\Sdk\ndk\21.3.6528147/toolchains/llvm/prebuilt/windows-x86_64/bin/arm-linux-androideabi-ranlib
SED           = $(QMAKE) -install sed
STRIP         = 

####### Output directory

OBJECTS_DIR   = armeabi-v7a\\

####### Files

SOURCES       = ..\UnitTest\mainwindowtest.cpp 
OBJECTS       = armeabi-v7a\mainwindowtest.obj
DIST          =  mainwindowtest.h ..\UnitTest\mainwindowtest.cpp
QMAKE_TARGET  = libUnitTest_armeabi-v7a.so
DESTDIR       = 
TARGET        = libUnitTest_armeabi-v7a.so


first: all
####### Build rules

libUnitTest_armeabi-v7a.so:  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake: FORCE
	@$(QMAKE) -o Makefile ..\UnitTest\UnitTest.pro -spec android-clang "CONFIG+=debug" "CONFIG+=qml_debug" "ANDROID_ABIS=armeabi-v7a"

qmake_all: FORCE


all: Makefile libUnitTest_armeabi-v7a.so

dist: distdir FORCE
	(cd `dirname $(DISTDIR)` && $(TAR) $(DISTNAME).tar $(DISTNAME) && $(COMPRESS) $(DISTNAME).tar) && $(MOVE) `dirname $(DISTDIR)`\$(DISTNAME).tar.gz . && $(DEL_FILE) -r $(DISTDIR)

distdir: FORCE
	@if not exist $(DISTDIR) mkdir $(DISTDIR) & if not exist $(DISTDIR) exit 1
	$(COPY_FILE) --parents $(DIST) $(DISTDIR)\


clean: compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


distclean: clean 
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) .qmake.stash
	-$(DEL_FILE) Makefile


####### Sub-libraries

aab: apk_install_target
	C:\Qt\5.15.2\android\bin\androiddeployqt.exe --input C:/Qt/Tankists/Tankists/build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug/android-UnitTest-deployment-settings.json --output C:/Qt/Tankists/Tankists/build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug/android-build --aab --apk C:\Qt\Tankists\Tankists\build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug\android-build\UnitTest.apk

apk: apk_install_target
	C:\Qt\5.15.2\android\bin\androiddeployqt.exe --input C:/Qt/Tankists/Tankists/build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug/android-UnitTest-deployment-settings.json --output C:/Qt/Tankists/Tankists/build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug/android-build --apk C:\Qt\Tankists\Tankists\build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug\android-build\UnitTest.apk

apk_install_target: first
	$(MAKE) -f $(MAKEFILE) INSTALL_ROOT=C:\Qt\Tankists\Tankists\build-UnitTest-Android_Qt_5_15_2_Clang_Multi_Abi-Debug\android-build install

check: first

benchmark: first

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

armeabi-v7a\mainwindowtest.obj: ..\UnitTest\mainwindowtest.cpp ..\UnitTest\mainwindowtest.h \
		..\CCPS\mainwindow.h \
		..\CCPS\mytcpclient.h \
		..\CCPS\functions.h \
		..\CCPS\work.h \
		..\CCPS\registrwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o armeabi-v7a\mainwindowtest.obj ..\UnitTest\mainwindowtest.cpp

####### Install

install_target: all FORCE
	@if not exist $(INSTALL_ROOT:@msyshack@%=%)\libs\armeabi-v7a mkdir $(INSTALL_ROOT:@msyshack@%=%)\libs\armeabi-v7a & if not exist $(INSTALL_ROOT:@msyshack@%=%)\libs\armeabi-v7a exit 1
	$(QINSTALL_PROGRAM) $(QMAKE_TARGET) $(INSTALL_ROOT:@msyshack@%=%)\libs\armeabi-v7a\$(QMAKE_TARGET)

uninstall_target: FORCE
	-$(DEL_FILE) $(INSTALL_ROOT:@msyshack@%=%)\libs\armeabi-v7a\$(QMAKE_TARGET)
	-$(DEL_DIR) $(INSTALL_ROOT:@msyshack@%=%)\libs\armeabi-v7a 


install: install_target  FORCE

uninstall: uninstall_target  FORCE

FORCE:

